# ==== Project Makefile Configuration ====
# Static Lib version

# gets passed from main make file
ifeq ($(config),Optimize)
	CXXFLAGS += -O3
else ifeq ($(config),Release)
	CXXFLAGS += -O3
	CXXFLAGS += -s
else
	config=Debug
	CXXFLAGS += -g
endif

#Compiler and Compiler options
CXX = g++
CXXFLAGS += -Wall -I./include
LDFLAGS =

#Directory used to install Application
INSTALLDIR =/usr/local/lib

# Desired Name of the final Executable
APPNAME = "APPNAME"

# Source and Destination Directories for all files 
BIN = ../$(config)/lib$(APPNAME).a
OBJDIR = .obj
DEPDIR = .dep
SRCDIR = src

# Finds the locations for Sources, Object, and dependency files
SRC = $(wildcard $(SRCDIR)/*.cpp)
OBJ = $(SRC:$(SRCDIR)/%.cpp=$(OBJDIR)/%.o)
DEP = $(OBJ:$(OBJDIR)/%.o=$(DEPDIR)/%.d)

# ALL rule
all: $(BIN)

# ==== Utility Function ====
# Clean command 
clean:
	rm -f $(OBJ) $(DEP) $(BIN)

# Uninstall Step
uninstall:
	rm -f $(INSTALLDIR)/$(APPNAME)

# install step
install: all
	cp -f $(BIN) $(INSTALLDIR)/$(APPNAME)
	chmod 755 $(INSTALLDIR)/$(APPNAME)

#==== Compilation Steps ====

# FINAL Compilation step, produces final lib
$(BIN): $(OBJ)
	@mkdir -p $(@D)
	ar rcs $@ $^

# Generates Dependency files
$(DEPDIR)/%.d: $(SRCDIR)/%.cpp
	@mkdir -p $(@D)
	@$(CPP) $(CXXFLAGS) $< -MM -MT $(@:$(DEPDIR)/%.d=$(OBJDIR)/%.o) >$@

-include $(DEP)

# Compiles all translation units, does each one individually
$(OBJDIR)/%.o: $(SRCDIR)/%.cpp
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) -o $@ -c $<
